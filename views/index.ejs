<script>
  var emulator;
  var socket;
	$(document).ready( function(){
		emulator = new JSNES({
			'ui': $("#emulator").JSNESUI({
				"Nintendo": [["Contra", "/roms/Contra.nes"],
										 ["Dr. Mario", "/roms/Dr_Mario.nes"],
										 ["Bubble Bobble", "/roms/Bubble_Bobble.nes"],
										 ["Bubble Bobble 2", "/roms/Bubble_Bobble2.nes"]],
				"Homebrew": [["Concentration Room", "/roms/croom.nes"]]
			})
		});

    socket = io.connect('http://' + document.location.hostname + ':3333/');

    // Display sessionId
    socket.on("connect", function(evt) {
      var sessionId = document.createElement("div");
      //document.querySelector("#sessionId").innerHTML = sessionId;
    });

    socket.on("role", function(message) {
      switch (message.initialize) {
        case 'm': joynesClient = new joynes.Master(emulator, socket); break;
        case 's': joynesClient = new joynes.Slave(emulator, socket); break;
        default: alert("something's wrong");
      }

      joynesClient.onRomLoaded = function() {
        popScreen();
      }
    });

    // partnerId is a URL parameter
    var partnerIdPresent = /\/(\w+)/.exec(document.location.pathname);
    if(partnerIdPresent) {
      var partnerId = partnerIdPresent[1];
      socket.emit("register:s", partnerId);
    } else {
      socket.emit("register:m");
    }
  });

  var currentPoster = undefined;

  var displayPoster = function(title, timeout) {
    timeout = timeout || 500;
    var poster = document.querySelector("#posters li[data-game='" + title + "']");

    // Hide previous poster
    if(currentPoster) {
      currentPoster.style.opacity = 0;
    }

    currentPoster = poster;
    // Display title's poster
    if(currentPoster) {
      currentPoster.style.opacity = 1;
    }
  }

  var popScreen = function(timeout) {
    var nesScreen = $(".nes-screen");
    if(!nesScreen.data("popped")) {
      timeout = timeout || 1000;
      nesScreen.data("popped", true);
      setTimeout(function() {
        // We're scaling element up; if this causes a slowdown
        // in rendering, we should be removing a negative scale here.
        nesScreen.
          css("-webkit-transform", "skewY(0) scale(5)").
          css("left", "-79px");
        $("#container-main").css("opacity", "0.4");
      }, timeout);
    }
  }

  document.onready = function() {

    // Game setup (cartridges, posters)
    var games = document.querySelectorAll("#games li");
    for(var i = 0; i < games.length; i++) {

      var game = games.item(i);

      game.onmouseover = function(event) {
        var title = event.target.getAttribute("data-game");
        displayPoster(title);
      }

      // Restore poster to loaded game
      game.onmouseout = function(event) {
        var gameIndex = document.querySelector("select").selectedIndex;
        var games = document.querySelectorAll("select option");
        var title = games.item(gameIndex).innerHTML;

        displayPoster(title);
      }

      game.onclick = function(event) {
        var title = event.target.getAttribute("data-game");
        var roms = document.querySelector(".nes-roms select");

        displayPoster(title);

        // Load game's ROM
        for(var j = 0; j < roms.options.length; j++) {
          var rom = roms.options.item(j);
          if(rom.innerHTML == title) {
            roms.selectedIndex = j;
            $(".nes-roms select").change();
          }
        }
      }
    }
  }
</script>

<div id="wrapper-main">
	<div id="container-main" >
		<div id="container-title">
			<div id="title">
        <!-- <p>This is the title.</p> -->
			</div>
		</div>
		<div id="container-tv">
			<div id="tv">
				<!-- <p>This is a tv.</p> -->
			</div>
		</div>
		<div id="container-nes">
			<div id="nes">
				<!-- <p>This is a nes system.</p> -->
			</div>
		</div>
    <div id="container-posters">
      <ul id="posters">
        <li data-game="Dr. Mario"/>
        <li data-game="Contra"/>
        <li data-game="Bubble Bobble"/>
        <li data-game="Bubble Bobble 2"/>
      </ul>
    </div>
		<div id="container-controllers">
      <ul>
        <li class="controller" id="controller1"></li>
        <li class="controller" id="controller2"></li>
      </ul>
		</div>
    <div id="container-games">
      <ul id="games">
        <li data-game="Dr. Mario" />
        <li data-game="Contra" />
        <li data-game="Bubble Bobble" />
        <li data-game="Bubble Bobble 2" />
      </ul>
    </div>
		<div id="container-couch">
			<div id="couch">
				<!-- <p>This is the couch.</p> -->
			</div>
		</div>
		<div id="container-bg">
			<div id="bg">
				<!-- <p>This is the background</p> -->
			</div>
		</div>
<!-- 		<div id="container-floor">
			<div id="floor">
				<p>This is the floor</p>
			</div>
		</div> -->
	</div>
  <div id="emulator"></div>
</div>

